hdfs:
  image: gallna/yarn.hadoop:2.7.3-5
  # build: .
  # dockerfile: "Dockerfile.hadoop"
  environment:
    LOG_LEVEL: WARN
    yarn_site: |
      yarn.scheduler.maximum-allocation-mb    4096
      yarn.scheduler.increment-allocation-mb  512
    hdfs_site: |
      dfs.namenode.safemode.threshold-pct 0
      dfs.namenode.safemode.min.datanodes 0
  volumes:
    - ./bin/entrypoint.sh:/usr/local/bin/entrypoint.sh
    # - ./bin/config.sh:/usr/local/bin/config.sh
    # - ./etc/hadoop/yarn-env.sh:/usr/local/hadoop/etc/hadoop/yarn-env.sh
    # - ./etc/hadoop/hadoop-env.sh:/usr/local/hadoop/etc/hadoop/hadoop-env.sh
    # - ./etc/hadoop/log4j.properties:/usr/local/hadoop/etc/hadoop/log4j.properties
    # - ./etc/hadoop/core-site.xml:/usr/local/hadoop/etc/hadoop/core-site.xml
    # - ./etc/hadoop/hdfs-site.xml:/usr/local/hadoop/etc/hadoop/hdfs-site.xml
    # - ./etc/hadoop/yarn-site.xml:/usr/local/hadoop/etc/hadoop/yarn-site.xml
    # - ./etc/hadoop/mapred-site.xml:/usr/local/hadoop/etc/hadoop/mapred-site.xml
    # - ./etc/hadoop/capacity-scheduler.xml:/usr/local/hadoop/etc/hadoop/capacity-scheduler.xml

namenode:
  extends: hdfs
  # entrypoint: entrypoint.sh -N
  command: -N
  container_name: namenode
  hostname: namenode
  expose:
    - 8020
  ports:
    - 50070

datanode:
  extends: hdfs
  # entrypoint: entrypoint.sh --datanode
  command: --datanode
  container_name: datanode
  hostname: datanode
  expose:
    - 50010
    - 50020
  ports:
    - 50075

resource-manager:
  extends: hdfs
  # entrypoint: entrypoint.sh --resource-manager
  command: --resource-manager
  container_name: resource-manager
  hostname: resource-manager
  expose:
    - 8031
    - 8032
    - 8033
  ports:
    - 8088

job-history:
  extends: hdfs
  # entrypoint: entrypoint.sh --job-history
  command: --job-history
  container_name: job-history
  hostname: job-history
  expose:
    - 10020
    - 50030
    - 50060
    - 10033
  ports:
    - 19888


web-app-proxy:
  extends: hdfs
  # entrypoint: entrypoint.sh --web-app-proxy
  command: --web-app-proxy
  container_name: web-app-proxy
  hostname: web-app-proxy
  ports:
    - 18088
